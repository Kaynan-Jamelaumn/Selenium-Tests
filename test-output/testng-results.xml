<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="22" passed="14" failed="4" skipped="4">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-07T10:45:40 BRT" name="Default suite" finished-at="2025-01-07T10:46:01 BRT" duration-ms="20178">
    <groups>
    </groups>
    <test started-at="2025-01-07T10:45:40 BRT" name="Default test" finished-at="2025-01-07T10:46:01 BRT" duration-ms="20178">
      <class name="DefaultTesting">
        <test-method is-config="true" signature="setUp()[pri:0, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:45:40 BRT" name="setUp" finished-at="2025-01-07T10:45:50 BRT" duration-ms="9473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLogin()[pri:1, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:45:50 BRT" name="testLogin" finished-at="2025-01-07T10:45:51 BRT" duration-ms="695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method signature="testViewCare()[pri:2, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:45:51 BRT" name="testViewCare" finished-at="2025-01-07T10:45:56 BRT" depends-on-methods="DefaultTesting.testLogin" duration-ms="5948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testViewCare -->
        <test-method signature="testFoundClientSalesPoint()[pri:3, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:45:56 BRT" name="testFoundClientSalesPoint" finished-at="2025-01-07T10:45:57 BRT" depends-on-methods="DefaultTesting.testViewCare" duration-ms="625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFoundClientSalesPoint -->
        <test-method signature="testFilterSalesPointByClient()[pri:3, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:45:57 BRT" name="testFilterSalesPointByClient" finished-at="2025-01-07T10:45:57 BRT" depends-on-methods="DefaultTesting.testFoundClientSalesPoint" duration-ms="365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterSalesPointByClient -->
        <test-method signature="testFilterSalesPointByID()[pri:3, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:45:57 BRT" name="testFilterSalesPointByID" finished-at="2025-01-07T10:45:58 BRT" depends-on-methods="DefaultTesting.testFoundClientSalesPoint" duration-ms="331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterSalesPointByID -->
        <test-method signature="testFilterSalesPointByLastMessage()[pri:3, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:45:58 BRT" name="testFilterSalesPointByLastMessage" finished-at="2025-01-07T10:45:58 BRT" depends-on-methods="DefaultTesting.testFoundClientSalesPoint" duration-ms="332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterSalesPointByLastMessage -->
        <test-method signature="testFilterSalesPointByOnlineEquipment()[pri:3, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:45:58 BRT" name="testFilterSalesPointByOnlineEquipment" finished-at="2025-01-07T10:45:58 BRT" depends-on-methods="DefaultTesting.testFoundClientSalesPoint" duration-ms="329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterSalesPointByOnlineEquipment -->
        <test-method signature="testFilterSalesPointBySalesPoint()[pri:3, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:45:58 BRT" name="testFilterSalesPointBySalesPoint" finished-at="2025-01-07T10:45:59 BRT" depends-on-methods="DefaultTesting.testFoundClientSalesPoint" duration-ms="330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterSalesPointBySalesPoint -->
        <test-method signature="testFilterSalesPointByServiceOrder()[pri:3, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:45:59 BRT" name="testFilterSalesPointByServiceOrder" finished-at="2025-01-07T10:45:59 BRT" depends-on-methods="DefaultTesting.testFoundClientSalesPoint" duration-ms="320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterSalesPointByServiceOrder -->
        <test-method signature="testFilterSalesPointByTotalEquipment()[pri:3, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:45:59 BRT" name="testFilterSalesPointByTotalEquipment" finished-at="2025-01-07T10:45:59 BRT" depends-on-methods="DefaultTesting.testFoundClientSalesPoint" duration-ms="314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterSalesPointByTotalEquipment -->
        <test-method signature="testOnlineEquipements()[pri:3, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:45:59 BRT" name="testOnlineEquipements" finished-at="2025-01-07T10:46:00 BRT" depends-on-methods="DefaultTesting.testViewCare" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnlineEquipements -->
        <test-method signature="testAssertNumberOfCLients()[pri:4, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:46:00 BRT" name="testAssertNumberOfCLients" finished-at="2025-01-07T10:46:00 BRT" depends-on-methods="DefaultTesting.testFoundClientSalesPoint" duration-ms="39" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Number of Shown Sales Points And Number of Sales Points Are Different expected [3] but found [4]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Number of Shown Sales Points And Number of Sales Points Are Different expected [3] but found [4]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at DefaultTesting.testAssertNumberOfCLients(DefaultTesting.java:389)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAssertNumberOfCLients -->
        <test-method signature="testFetchListAndClickFirstSalePoint()[pri:4, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:46:00 BRT" name="testFetchListAndClickFirstSalePoint" finished-at="2025-01-07T10:46:00 BRT" depends-on-methods="DefaultTesting.testFoundClientSalesPoint" duration-ms="241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFetchListAndClickFirstSalePoint -->
        <test-method signature="testLastInfoFirstMonitorableIsValidAgata()[pri:5, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:46:00 BRT" name="testLastInfoFirstMonitorableIsValidAgata" finished-at="2025-01-07T10:46:00 BRT" depends-on-methods="DefaultTesting.testFetchListAndClickFirstSalePoint" duration-ms="547" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The date and time information was not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The date and time information was not found.
at org.testng.Assert.fail(Assert.java:99)
at DefaultTesting.validateLastInfo(DefaultTesting.java:160)
at DefaultTesting.testLastInfoFirstMonitorableIsValidAgata(DefaultTesting.java:450)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastInfoFirstMonitorableIsValidAgata -->
        <test-method signature="testLastInfoFirstMonitorableIsValidController()[pri:5, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:46:00 BRT" name="testLastInfoFirstMonitorableIsValidController" finished-at="2025-01-07T10:46:00 BRT" depends-on-methods="DefaultTesting.testFetchListAndClickFirstSalePoint" duration-ms="27" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The date and time information was not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The date and time information was not found.
at org.testng.Assert.fail(Assert.java:99)
at DefaultTesting.validateLastInfo(DefaultTesting.java:160)
at DefaultTesting.testLastInfoFirstMonitorableIsValidController(DefaultTesting.java:442)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastInfoFirstMonitorableIsValidController -->
        <test-method signature="testValidateNameSalesPoint()[pri:5, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:46:00 BRT" name="testValidateNameSalesPoint" finished-at="2025-01-07T10:46:00 BRT" depends-on-methods="DefaultTesting.testFetchListAndClickFirstSalePoint" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateNameSalesPoint -->
        <test-method signature="testValidatesNumberOfOS()[pri:5, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:46:00 BRT" name="testValidatesNumberOfOS" finished-at="2025-01-07T10:46:00 BRT" depends-on-methods="DefaultTesting.testFetchListAndClickFirstSalePoint" duration-ms="30" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[OS Number Does Not Match expected [2] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: OS Number Does Not Match expected [2] but found [0]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at DefaultTesting.testValidatesNumberOfOS(DefaultTesting.java:433)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatesNumberOfOS -->
        <test-method signature="testAcessEquipmentController()[pri:6, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:46:00 BRT" name="testAcessEquipmentController" finished-at="2025-01-07T10:46:00 BRT" depends-on-methods="DefaultTesting.testLastInfoFirstMonitorableIsValidController" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method DefaultTesting.testAcessEquipmentController()[pri:6, instance:DefaultTesting@7ec7ffd3] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method DefaultTesting.testAcessEquipmentController()[pri:6, instance:DefaultTesting@7ec7ffd3] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAcessEquipmentController -->
        <test-method signature="testGoBackFromEquipment1()[pri:6, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:46:00 BRT" name="testGoBackFromEquipment1" finished-at="2025-01-07T10:46:00 BRT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGoBackFromEquipment1 -->
        <test-method signature="testAcessEquipmentAgata()[pri:7, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:46:00 BRT" name="testAcessEquipmentAgata" finished-at="2025-01-07T10:46:00 BRT" depends-on-methods="DefaultTesting.testLastInfoFirstMonitorableIsValidAgata" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method DefaultTesting.testAcessEquipmentAgata()[pri:7, instance:DefaultTesting@7ec7ffd3] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method DefaultTesting.testAcessEquipmentAgata()[pri:7, instance:DefaultTesting@7ec7ffd3] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAcessEquipmentAgata -->
        <test-method signature="testGoBackFromEquipment2()[pri:7, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:46:00 BRT" name="testGoBackFromEquipment2" finished-at="2025-01-07T10:46:00 BRT" depends-on-methods="DefaultTesting.testAcessEquipmentAgata" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method DefaultTesting.testGoBackFromEquipment2()[pri:7, instance:DefaultTesting@7ec7ffd3] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method DefaultTesting.testGoBackFromEquipment2()[pri:7, instance:DefaultTesting@7ec7ffd3] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGoBackFromEquipment2 -->
        <test-method signature="testGoBackFromSalesPoint()[pri:8, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:46:01 BRT" name="testGoBackFromSalesPoint" finished-at="2025-01-07T10:46:01 BRT" depends-on-methods="DefaultTesting.testGoBackFromEquipment2" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method DefaultTesting.testGoBackFromSalesPoint()[pri:8, instance:DefaultTesting@7ec7ffd3] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method DefaultTesting.testGoBackFromSalesPoint()[pri:8, instance:DefaultTesting@7ec7ffd3] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGoBackFromSalesPoint -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:DefaultTesting@7ec7ffd3]" started-at="2025-01-07T10:46:01 BRT" name="tearDown" finished-at="2025-01-07T10:46:01 BRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- DefaultTesting -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
